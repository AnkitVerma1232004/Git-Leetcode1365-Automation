name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
      - "tests/**"
  pull_request:
    paths:
      - "solutions/**"
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect Changed Solution Files
        id: detect
        run: |
          BASE="${{ github.event.before }}"
          # if BEFORE isn’t valid (e.g. first commit), fall back to HEAD~1
          if [ -z "$BASE" ] || ! git cat-file -e "$BASE"^{commit}; then
            BASE=$(git rev-parse HEAD~1)
          fi

          # grab only changes under solutions/
          CHANGED=$(git diff --name-only "$BASE" HEAD | grep '^solutions/')
          echo "Changed solution files:"
          echo "$CHANGED"
          
          if [ -z "$CHANGED" ]; then
            echo "No solution changes detected; skipping tests."
            exit 0
          fi

          # expose for next step
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED"    >> $GITHUB_OUTPUT
          echo "EOF"        >> $GITHUB_OUTPUT

      - name: Determine LANGUAGE
        run: |
          for f in ${{ steps.detect.outputs.changed_files }}; do
            case "$f" in
              *.c)    echo "LANGUAGE=C"      >> $GITHUB_ENV && break ;;
              *.cpp)  echo "LANGUAGE=C++"    >> $GITHUB_ENV && break ;;
              *.py)   echo "LANGUAGE=Python" >> $GITHUB_ENV && break ;;
              *.java) echo "LANGUAGE=Java"   >> $GITHUB_ENV && break ;;
            esac
          done

      - name: Install All Runtimes
        run: |
          sudo apt update
          sudo apt install -y gcc g++ python3 openjdk-17-jdk

      - name: Compile & Run C Tests
        if: env.LANGUAGE == 'C'
        run: |
          set -euo pipefail
          gcc tests/test.c -o test_runner
          echo "→ Running C tests…"
          ./test_runner | tee test_results.log

      - name: Compile & Run C++ Tests
        if: env.LANGUAGE == 'C++'
        run: |
          set -euo pipefail
          g++ tests/test.cpp -o test_runner_cpp
          echo "→ Running C++ tests…"
          ./test_runner_cpp | tee test_results.log

      - name: Run Python Tests
        if: env.LANGUAGE == 'Python'
        run: |
          set -euo pipefail
          echo "→ Running Python tests…"
          python3 tests/test.py | tee test_results.log

      - name: Compile & Run Java Tests
        if: env.LANGUAGE == 'Java'
        run: |
          set -euo pipefail
          javac tests/Test.java
          echo "→ Running Java tests…"
          java -cp . tests.Test | tee test_results.log

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
